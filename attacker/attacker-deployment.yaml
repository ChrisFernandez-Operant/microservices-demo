# Copyright 2024 Security Testing Setup
# Licensed under Apache License 2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: attacker
  labels:
    app: attacker
spec:
  selector:
    matchLabels:
      app: attacker
  replicas: 1
  template:
    metadata:
      labels:
        app: attacker
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: attacker
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: attacker
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-east4-docker.pkg.dev/operant-ai-2024/sales-demo-apps/attacker:latest
        command: ["timeout", "30m", "/scripts/start_attacks.sh"]  # Auto-stop after 30 minutes
        env:
        - name: TARGET_HOST
          value: "frontend"
        - name: TARGET_PORT
          value: "80"
        - name: BASE_PATH
          value: ""
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command: ["sh", "-c", "pgrep -f 'attack_scripts'"]
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["sh", "-c", "test -f /scripts/start_attacks.sh"]
      initContainers:
      - name: frontend-check
        image: busybox:latest
        command: ['sh', '-c', 'until nslookup frontend; do echo waiting for frontend; sleep 2; done']
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: attacker
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: attacker
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: attacker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: attacker
subjects:
- kind: ServiceAccount
  name: attacker

apiVersion: apps/v1
kind: Deployment
metadata:
  name: attacker
  namespace: attacker
  labels:
    app: attacker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: attacker
  template:
    metadata:
      labels:
        app: attacker
    spec:
      serviceAccountName: attacker
      volumes:
      - name: target-ip
        emptyDir: {}
      initContainers:
      - name: get-frontend-ip
        image: us-east4-docker.pkg.dev/operant-ai-2024/sales-demo-apps/attacker:latest
        command:
          - sh
          - -c
          - |
            # In this case, we use internal DNS directly
            echo "Using internal DNS for frontend service"
            echo "frontend.default.svc.cluster.local" > /target/TARGET_IP
        volumeMounts:
        - name: target-ip
          mountPath: /target
      containers:
      - name: attacker
        image: us-east4-docker.pkg.dev/operant-ai-2024/sales-demo-apps/attacker:latest
        env:
        - name: TARGET_PORT
          value: "80"
        - name: BASE_PATH
          value: ""
        - name: BASE_URL
          value: "http://frontend.default.svc.cluster.local"
        command:
          - bash
          - -c
          - |
            # Retrieve the internal DNS for frontend service
            TARGET_HOST=$(cat /target/TARGET_IP)
            export BASE_URL="http://${TARGET_HOST}:${TARGET_PORT}${BASE_PATH}"
            echo "Using BASE_URL: ${BASE_URL}"
            /scripts/start_attacks.sh
        volumeMounts:
        - name: target-ip
          mountPath: /target

